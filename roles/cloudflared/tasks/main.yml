---
- name: Start Cloudflared
  block:
  - name: Create Cloudflared Directories
    ansible.builtin.file:
      path: "{{ item }}"
      owner: kchou
      group: kchou
      mode: "0755"
      state: directory
    with_items:
      - "{{ cloudflared_data_directory }}"
  - name: Template cloudflared credentials.json
    ansible.builtin.template:
      src: credentials.json
      dest: "{{ cloudflared_data_directory }}/credentials.json"
      owner: kchou
      group: kchou
      mode: "0755"
  - name: Template cloudflared config.yml
    ansible.builtin.template:
      src: config.yml
      dest: "{{ cloudflared_data_directory }}/config.yml"
      owner: kchou
      group: kchou
      mode: "0755"
    register: template_config
  - name: Cloudflared Container
    community.docker.docker_container:
      name: cloudflared
      image: cloudflare/cloudflared:2023.8.1
      command:
        - "tunnel"
        - "--config"
        - "/etc/cloudflared/config.yml"
        - "run"
        - "{{ cloudflared_tunnel_id }}"
      volumes:
        - "{{ cloudflared_data_directory }}/config.yml:/etc/cloudflared/config.yml"
        - "{{ cloudflared_data_directory }}/credentials.json:/etc/cloudflared/credentials.json"
      env:
        NO_AUTOUPDATE: "true"
        TUNNEL_CRED_FILE: /etc/cloudflared/credentials.json
        # TUNNEL_TRANSPORT_PROTOCOL: http2
      restart_policy: always
      recreate: "{{ template_config is changed }}"
  - name: Create DNS Record
    ansible.builtin.command: >
      cloudflared tunnel route dns {{ cloudflared_tunnel_id }} {{ cloudflared_tunnel_domain_name }}
    register: dns_output
    changed_when: dns_output.rc != 0
  - name: Create DNS Record
    ansible.builtin.command: >
      cloudflared tunnel route dns {{ cloudflared_tunnel_id }} *.{{ cloudflared_tunnel_domain_name }}
    register: dns_output
    changed_when: dns_output.rc != 0
  when: cloudflared_enabled is true

- name: Stop Cloudflared
  block:
    - name: Stop Cloudflared
      community.docker.docker_container:
        name: "{{ cloudflared_container_name }}"
        state: absent
  when: cloudflared_enabled is false