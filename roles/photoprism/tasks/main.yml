---
- name: Start photoprism Server
  block:
  - name: Create photoprism directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0755"
    with_items:
      - /data/photoprism
      - /data/photoprism/Pictures
      - /data/photoprism/storage

  - name: photoprism Docker Container
    community.docker.docker_container:
      name: photoprism
      image: photoprism/photoprism:230719
      security_opts:
        - seccomp=unconfined
        - apparmor=unconfined
      env:
        TZ: Asia/Shanghai
        PHOTOPRISM_ADMIN_USER: admin
        PHOTOPRISM_ADMIN_PASSWORD: "{{ photoprism_admin_password }}"
        PHOTOPRISM_SITE_URL: https://photoprism.{{ cloudflared_tunnel_domain_name }}
        PHOTOPRISM_DISABLE_TLS: "false"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
        PHOTOPRISM_DEFAULT_TLS: "true"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
        PHOTOPRISM_ORIGINALS_LIMIT: "5000"               # file size limit for originals in MB (increase for high-res video)
        PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
        PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
        PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
        PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
        PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
        PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
        PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
        PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
        PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
        PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
        PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
        PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW images
        PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
        PHOTOPRISM_JPEG_QUALITY: "85"                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
        PHOTOPRISM_DETECT_NSFW: "true"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
        PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
        # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
        PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
        PHOTOPRISM_DATABASE_SERVER: "{{ mysql_host }}:3306"     # MariaDB or MySQL database server (hostname:port)
        PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
        PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
        PHOTOPRISM_DATABASE_PASSWORD: "{{ mysql_photoprism_password }}"       # MariaDB or MySQL database user password
        PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
        PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
        PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
        ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
        PHOTOPRISM_FFMPEG_ENCODER: "nvidia"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
        PHOTOPRISM_FFMPEG_SIZE: "3840"               # video size limit in pixels (720-7680) (default: 3840)
        PHOTOPRISM_FFMPEG_BITRATE: "50"              # video bitrate limit in Mbit/s (default: 50)
        ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
        PHOTOPRISM_INIT: "https gpu tensorflow"
        ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
        PHOTOPRISM_UID: "1000"
        PHOTOPRISM_GID: "1000"
        PHOTOPRISM_UMASK: "0000"
        NVIDIA_VISIBLE_DEVICES: "all"
        NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
      user: 1000:1000
      working_dir: /photoprism
      volumes:
        - "/data/photoprism/Pictures:/photoprism/originals"
        - "/data/photoprism/storage:/photoprism/storage"
      ports:
        - "2342:2342"
      restart_policy: always
      device_requests:
        - driver: nvidia
          # device_ids:
          #   - '0'
          count: -1
          capabilities:
          # We have one OR condition: 'gpu' AND 'utility'
            - - gpu
              - utility
  when: photoprism_enabled is true

- name: Stop photoprism Server
  block:
    - name: Stop photoprism Server
      community.docker.docker_container:
        name: photoprism
        state: absent
  when: photoprism_enabled is false
