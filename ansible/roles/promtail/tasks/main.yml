---
- name: install unzip package
  ansible.builtin.package:
    name: unzip
    state: present

- name: check if binary exists
  ansible.builtin.stat:
    path: /usr/local/bin/promtail
  register: binary

- name: check promtail version
  ansible.builtin.command: promtail --version
  register: promtail_version_check
  when: binary.stat.exists
  changed_when: false

- name: block
  block:
    - name: install promtail if its not present
      ansible.builtin.unarchive:
        src: "https://github.com/grafana/loki/releases/download/v\
            {{  promtail_version  }}/promtail-linux-amd64.zip"
        dest: /usr/local/bin/
        remote_src: true

    - name: Rename promtail binary
      ansible.builtin.command:
        cmd: mv /usr/local/bin/promtail-linux-amd64 /usr/local/bin/promtail
  when: (not binary.stat.exists) or (promtail_version_check | regex_search('\d.\d+.\d+') != promtail_version)
  notify: restart promtail

- name: template systemd unit file
  ansible.builtin.template:
    src: templates/promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: '0644'
  tags:
    - loki

- name: reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  tags:
    - loki

- name: make directory for promtail config
  ansible.builtin.file:
    path: /etc/promtail
    state: directory
    owner: root
    group: root
    mode: "0644"

- name: template promtail config file
  ansible.builtin.template:
    src: templates/promtail.yml.j2
    dest: /etc/promtail/promtail.yml
    owner: root
    group: root
    mode: "0644"

- name: restart promtail
  become: true
  ansible.builtin.systemd:
    name: promtail
    enabled: true
    state: started
  changed_when: false